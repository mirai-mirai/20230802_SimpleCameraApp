作るもの

スタートボタン：カメラ画像を表示
ストップボタン：カメラ停止
セレクト：カメラデバイスを選択する

実装完了

https://github.com/mirai-mirai/20230802_SimpleCameraApp

pagesで公開

publicにする必要がある
どうやってPublicにする？？

Settings => Danger Zone => Change repository visibility

Pagesからdocsを有効にする

docsフォルダ作成する

docsフォルダにコンパイルするようにする
vite.config.tsの修正

ビルド後にpublishする

自動化できないか？？

下記の通り修正してビルドしてSynsする
export default defineConfig({
  // github pagesの変な仕様（ルートが１つ上）に対応する
  base: '/20230802_SimpleCameraApp/',
  plugins: [vue()],
  build: {
    outDir: 'docs', // ビルド出力先を変更
    rollupOptions: {
      output: {
        assetFileNames: '[name]-[hash][extname]',
        chunkFileNames: '[name]-[hash].js', // JSをルートに出力
        entryFileNames: '[name]-[hash].js', // JSをルートに出力
      },
    },
  },
})

ビルドコマンドをf5に割り当てる

keybindings.jsonに以下を書けばよい
{
    "key": "ctrl+f5",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
        "text": "npm run build\r"
    },
},

To find keybindings.json. Open command pallete (Usually ctrl + shift + P or cmd + shift + P) then look for "Preferences: Open Keyboard Shortcuts (JSON)". Make sure it's the one with (JSON). 

それかこのやり方

.vscode/tasks.json

{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "build",
      "type": "shell",
      "command": "npm run build",
      "group": {
        "kind": "build",
        "isDefault": true
      }
    }
  ]
}

.vscode/keybindings.json
File > Preferences > Keyboard Shortcuts

[
    {
        "key" : "ctrl+s",
        "command" : "workbench.action.tasks.build"
    }
]


Ctrl+P => Open keybindings JSONでファイル開いて以下を追加するだけでOK
    {
        "key": "Ctrl+Shift+s",
        "command": "workbench.action.tasks.build",
    }
    
毎回ビルドコマンドを選ぶのが面倒やけど

自動で.vscode/tasks.jsonが生成された？？
自分で作った？？


消してみるか

{
	"version": "2.0.0",
	"tasks": [
		{
			"type": "npm",
			"script": "build",
			"group": "build",
			"problemMatcher": [],
			"label": "npm: build",
			"detail": "vue-tsc && vite build"
		}
	]
}
消してみた


普通に動いてる！！
いらんかった。

結局keybind設定するだけでOKやった

本当はgithubのSyncもやりたいけど

git pushでいけた？？？

じゃあ、そのコマンドをpackage.jsonにかいておけばよいか？？

いちおうgithubを確認してみる

ステージングまでは自分でコメントを書いておく必要がある

git syncは自動でできそう

だから、適宜Commitしておいて、ビルドと同時にsyncするようにするか

.gitignoreにmemo.txtを追加して公開されないようにしておくか


結論、コミットは手動、ビルドとgit pushはCtrl+Shift+s

タイトルを追加して試してみるか

まずは、いま公開されてるやつを確認する

そして決めたやり方で更新できるかを確認する

ビルド、コミット、プッシュの順番だから、
プッシュは別のコマンドにしておいた方がよいか

それかコミットのタイミングで同時に手動でプッシュするか

ビルドだけキーバインドできたからそれでよしとするか

たぶん公開できてない気がする

できてた！！！

まあ、これでよいか

デバイス選択機能をつけるか

ラジオボタンでデバイスを選ぶようにするか

以下で取得できる。
const devices = (await navigator.mediaDevices.enumerateDevices());

kind
videoinputまたはaudioinputが設定されます。
deviceId
デバイスを識別するIDです。使用するカメラを指定する際に使用します。
label
デバイスの名前です。ユーザにデバイスを選択させる際の選択肢として表示します。

種類を指定するには以下を使う：
const devices = (await navigator.mediaDevices.enumerateDevices())
    .filter((device) => device.kind === 'videoinput');


デバイスを開くには以下のようにする。
const media = await navigator.mediaDevices.getUserMedia({
  video: true,
  video: {
    deviceId: 選択したdeviceId,
  },
  audio: false,
});


データ取得できた：
[
    {
        "deviceId": "bc0c7713cd0581b48eba26541784f94385d3fab9e90c1038c4444b003258bcfe",
        "kind": "videoinput",
        "label": "USB2.0 HD UVC WebCam (13d3:56eb)",
        "groupId": "b7d39e02ad8d56ae789de5c8af0245725beefa5f9cd830a10bcbce934280125e"
    },
    {
        "deviceId": "cfa7bed8471e0d8ebc25ff880c93ff6b914fba11ccae3793c0d34c69f310cb87",
        "kind": "videoinput",
        "label": "Avatarify Camera",
        "groupId": "301ba36248bcf22948dfde0e0cf63bde400646db6eed2848565383739d9e1120"
    }
]

refにしてradioで選べるようにするか

<input type="radio" id="one" value="One" v-model="picked" />
<label for="one">One</label>

<input type="radio" id="two" value="Two" v-model="picked" />
<label for="two">Two</label>

結局以下でばっちり動いた：
<div v-for="{ deviceId, label } in $devices" :key="deviceId">
  <input type="radio" v-model="selectedDevId" :value="deviceId" @change="changeDevice">
  <label>{{ label }}</label>
</div>

完成した。後はこのサイトを使って検証するだけ

